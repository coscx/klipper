def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion localProperties.getProperty('flutter.compileSdkVersion').toInteger()

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.coscx.ckt"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters "arm64-v8a", "armeabi-v7a"//, "x86", "x86_64"
            // 还可以添加
        }

    }

    signingConfigs{
        debug{
            storeFile file("que.jks")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
        release{
            storeFile file("que.jks")
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
    }
    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            //关闭混淆
            minifyEnabled false //删除无用代码
            shrinkResources false //删除无用资源
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    // 以下配置请根据需求选择性添加
    // Umeng Push 厂商 SDK  https://developer.umeng.com/docs/67966/detail/98589
    // 小米 Push 通道
    implementation 'com.umeng.umsdk:xiaomi-push:4.9.1'
    implementation 'com.umeng.umsdk:xiaomi-umengaccs:1.2.8'
}
